#code whether manipulation checks passed, in homophobic condition (1) it should be less accepting(>=5)
#and for other condition (0) it should be equal/more accpeitng (equal or less than 4).
#First record the equal likert response to 4 after saving as character, then transform to numeric
data_long$Manip_1_Check<-as.character(data_long$Manip_1_Check)
data_long$MAnip_2_check<-as.character(data_long$MAnip_2_check)
data_long$Manip_1_Check[grepl('Equally',data_long$Manip_1_Check)] <- "4"
data_long$MAnip_2_check[grepl('Equally',data_long$MAnip_2_check)] <- "4"
#ensure it is numeric
data_long$Manip_1_Check<-as.numeric(data_long$Manip_1_Check)
data_long$MAnip_2_check<-as.numeric(data_long$MAnip_2_check)
#Currently Manip_1_Check and Manip_2_Check variables are based upon presented order, so based upon our transformation of the dataframe to long form we know that the first half of the data will correspond to the first check and second half to second check. So we may create a passing country manipulation variable based upon this.
data_long$ManipulationCheck<-0
data_long$ManipulationCheck[0:(nrow(data_long)/2)]<-data_long$Manip_1_Check[0:(nrow(data_long)/2)]
data_long$ManipulationCheck[((nrow(data_long)/2+1):nrow(data_long))]<-data_long$MAnip_2_check[((nrow(data_long)/2+1):nrow(data_long))]
#now code passed checks, initalize to 0
data_long$PassedManipCheck<-0
#now for equally accpeting countries you should answer 4 or above, recall condition value of 0 corresponds to equal
data_long$PassedManipCheck[data_long$ManipulationCheck*(1-data_long$condition)>=4 & data_long$condition==0]<-1
#for less accepting countries the answer should be less than 4
data_long$PassedManipCheck[data_long$ManipulationCheck*(1-data_long$condition)<4 & data_long$condition==1]<-1
##now we can code if  both checks were passed by multiplying together since both ought to be one
data_long$PassedAllChecks<-0
data_long$PassedAllChecks<-data_long$PassedManipCheck*data_long$SexualityCheckPassed
#create new dataframe of those who pased checks to analyze them
data_long_passed<-data_long[data_long$PassedAllChecks==1,]
myAOV1<-aov(measurement~Sexuality*condition,data=data_long)
summary(myAOV1)
View(data_long)
View(data_long_passed)
data_long$condition
data_long$condition
data_long <- gather(dfRelevant, condition,measurement, y1:y2, factor_key=TRUE)
#Now we only kept the first conditions homophobia since then  we know that the second is opposite.
#So recode condition variable that corresponds to condition's value for homophobia.
#right now condition is y1 or y2 for order present, now we want it as 1 for  less accepting, and 0 for equal.
#But first ensure it is as character not facgtor
data_long$condition<-as.character(data_long$condition)
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia==T]<-1
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia==F]<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia==T]<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia==F]<-1
data_long$condition
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia==T]
data_long$Country1Homophobia
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia==T]
data_long <- gather(dfRelevant, condition,measurement, y1:y2, factor_key=TRUE)
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia==T]
data_long$Country1Homophobia
data_long$Country1Homophobia==T
data_long <- gather(dfRelevant, condition,measurement, y1:y2, factor_key=TRUE)
#Now we only kept the first conditions homophobia since then  we know that the second is opposite.
#So recode condition variable that corresponds to condition's value for homophobia.
#right now condition is y1 or y2 for order present, now we want it as 1 for  less accepting, and 0 for equal.
#But first ensure it is as character not facgtor
data_long$condition<-as.character(data_long$condition)
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia=='True']<-1
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia=='False']<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia=='True']<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia=='False']<-1
data_long$condition
#recode 1 as gay and 0 as straight for sexuality, after converting to character
data_long$Sexuality<-as.character(data_long$Sexuality)
data_long$Sexuality[data_long$Sexuality=='Gay']<-1
data_long$Sexuality[data_long$Sexuality=='Straight']<-0
#do the same for the attention checks
data_long$Sexuality_Check_1<-as.character(data_long$Sexuality_Check_1)
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Gay']<-1
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Straight']<-0
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Not Specified']<-2
data_long$Sexuality_Check_1.1<-as.character(data_long$Sexuality_Check_1.1)
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Gay']<-1
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Straight']<-0
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Not Specified']<-2
data_long$SexualityCheck<-0
data_long$SexualityCheck[0:(nrow(data_long)/2)]<-data_long$Sexuality_Check_1[0:(nrow(data_long)/2)]
data_long$SexualityCheck[((nrow(data_long)/2+1):nrow(data_long))]<-data_long$Sexuality_Check_1.1[((nrow(data_long)/2+1):nrow(data_long))]
#code as passing manipulation checks if response equals condition
data_long$SexualityCheckPassed<-0
data_long$SexualityCheckPassed[as.numeric(data_long$SexualityCheck)==as.numeric(data_long$Sexuality)]<-1
#code whether manipulation checks passed, in homophobic condition (1) it should be less accepting(>=5)
#and for other condition (0) it should be equal/more accpeitng (equal or less than 4).
#First record the equal likert response to 4 after saving as character, then transform to numeric
data_long$Manip_1_Check<-as.character(data_long$Manip_1_Check)
data_long$MAnip_2_check<-as.character(data_long$MAnip_2_check)
data_long$Manip_1_Check[grepl('Equally',data_long$Manip_1_Check)] <- "4"
data_long$MAnip_2_check[grepl('Equally',data_long$MAnip_2_check)] <- "4"
#ensure it is numeric
data_long$Manip_1_Check<-as.numeric(data_long$Manip_1_Check)
data_long$MAnip_2_check<-as.numeric(data_long$MAnip_2_check)
#Currently Manip_1_Check and Manip_2_Check variables are based upon presented order, so based upon our transformation of the dataframe to long form we know that the first half of the data will correspond to the first check and second half to second check. So we may create a passing country manipulation variable based upon this.
data_long$ManipulationCheck<-0
data_long$ManipulationCheck[0:(nrow(data_long)/2)]<-data_long$Manip_1_Check[0:(nrow(data_long)/2)]
data_long$ManipulationCheck[((nrow(data_long)/2+1):nrow(data_long))]<-data_long$MAnip_2_check[((nrow(data_long)/2+1):nrow(data_long))]
#now code passed checks, initalize to 0
data_long$PassedManipCheck<-0
#now for equally accpeting countries you should answer 4 or above, recall condition value of 0 corresponds to equal
data_long$PassedManipCheck[data_long$ManipulationCheck*(1-data_long$condition)>=4 & data_long$condition==0]<-1
#for less accepting countries the answer should be less than 4
data_long$PassedManipCheck[data_long$ManipulationCheck*(1-data_long$condition)<4 & data_long$condition==1]<-1
##now we can code if  both checks were passed by multiplying together since both ought to be one
data_long$PassedManipCheck
data_long$condition<-as.numeric(data_long$condition)
#recode 1 as gay and 0 as straight for sexuality, after converting to character
data_long$Sexuality<-as.character(data_long$Sexuality)
data_long$Sexuality[data_long$Sexuality=='Gay']<-1
data_long$Sexuality[data_long$Sexuality=='Straight']<-0
#do the same for the attention checks
data_long$Sexuality_Check_1<-as.character(data_long$Sexuality_Check_1)
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Gay']<-1
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Straight']<-0
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Not Specified']<-2
data_long$Sexuality_Check_1.1<-as.character(data_long$Sexuality_Check_1.1)
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Gay']<-1
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Straight']<-0
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Not Specified']<-2
data_long$SexualityCheck<-0
data_long$SexualityCheck[0:(nrow(data_long)/2)]<-data_long$Sexuality_Check_1[0:(nrow(data_long)/2)]
data_long$SexualityCheck[((nrow(data_long)/2+1):nrow(data_long))]<-data_long$Sexuality_Check_1.1[((nrow(data_long)/2+1):nrow(data_long))]
#code as passing manipulation checks if response equals condition
data_long$SexualityCheckPassed<-0
data_long$SexualityCheckPassed[as.numeric(data_long$SexualityCheck)==as.numeric(data_long$Sexuality)]<-1
#code whether manipulation checks passed, in homophobic condition (1) it should be less accepting(>=5)
#and for other condition (0) it should be equal/more accpeitng (equal or less than 4).
#First record the equal likert response to 4 after saving as character, then transform to numeric
data_long$Manip_1_Check<-as.character(data_long$Manip_1_Check)
data_long$MAnip_2_check<-as.character(data_long$MAnip_2_check)
data_long$Manip_1_Check[grepl('Equally',data_long$Manip_1_Check)] <- "4"
data_long$MAnip_2_check[grepl('Equally',data_long$MAnip_2_check)] <- "4"
#ensure it is numeric
data_long$Manip_1_Check<-as.numeric(data_long$Manip_1_Check)
data_long$MAnip_2_check<-as.numeric(data_long$MAnip_2_check)
#Currently Manip_1_Check and Manip_2_Check variables are based upon presented order, so based upon our transformation of the dataframe to long form we know that the first half of the data will correspond to the first check and second half to second check. So we may create a passing country manipulation variable based upon this.
data_long$ManipulationCheck<-0
data_long$ManipulationCheck[0:(nrow(data_long)/2)]<-data_long$Manip_1_Check[0:(nrow(data_long)/2)]
data_long$ManipulationCheck[((nrow(data_long)/2+1):nrow(data_long))]<-data_long$MAnip_2_check[((nrow(data_long)/2+1):nrow(data_long))]
#now code passed checks, initalize to 0
data_long$PassedManipCheck<-0
#now for equally accpeting countries you should answer 4 or above, recall condition value of 0 corresponds to equal
data_long$PassedManipCheck[data_long$ManipulationCheck*(1-data_long$condition)>=4 & data_long$condition==0]<-1
#for less accepting countries the answer should be less than 4
data_long$PassedManipCheck[data_long$ManipulationCheck*(1-data_long$condition)<4 & data_long$condition==1]<-1
##now we can code if  both checks were passed by multiplying together since both ought to be one
data_long$PassedAllChecks<-0
data_long$PassedAllChecks<-data_long$PassedManipCheck*data_long$SexualityCheckPassed
#create new dataframe of those who pased checks to analyze them
data_long_passed<-data_long[data_long$PassedAllChecks==1,]
myAOV1<-aov(measurement~Sexuality*condition,data=data_long)
summary(myAOV1)
##again but only for those who passed attention/manipulation checks
myAOV2<-aov(measurement~Sexuality*condition,data=data_long_passed)
anova(myAOV2)
# Also get t test results comparing conditions (country homophobia) for each sexuality
t.test((data_long$measurement[data_long$Sexuality==1]~data_long$condition[data_long$Sexuality==1]),alternative = "two.sided")
t.test((data_long$measurement[data_long$Sexuality==0]~data_long$condition[data_long$Sexuality==0]),alternative = "two.sided")
View(df)
##keep relevant information for tests, demographics the manipulations, the measurements, and the manipulation checks
dfRelevant<-(df %>%
select(Country1Homophobia, Sexuality,y1,y2, Manip_1_Check, MAnip_2_check,Sexuality_Check_1,Sexuality_Check_1.1, Gender, Race) )
##put into long format
data_long <- gather(dfRelevant, condition,measurement, y1:y2, factor_key=TRUE)
#Now we only kept the first conditions homophobia since then  we know that the second is opposite.
#So recode condition variable that corresponds to condition's value for homophobia.
#right now condition is y1 or y2 for order present, now we want it as 1 for  less accepting, and 0 for equal.
#But first ensure it is as character not facgtor
data_long$condition<-as.character(data_long$condition)
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia=='True']<-1
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia=='False']<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia=='True']<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia=='False']<-1
data_long$condition<-as.numeric(data_long$condition)
#recode 1 as gay and 0 as straight for sexuality, after converting to character
data_long$Sexuality<-as.character(data_long$Sexuality)
data_long$Sexuality[data_long$Sexuality=='Gay']<-1
data_long$Sexuality[data_long$Sexuality=='Straight']<-0
#do the same for the attention checks
data_long$Sexuality_Check_1<-as.character(data_long$Sexuality_Check_1)
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Gay']<-1
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Straight']<-0
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Not Specified']<-2
data_long$Sexuality_Check_1.1<-as.character(data_long$Sexuality_Check_1.1)
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Gay']<-1
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Straight']<-0
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Not Specified']<-2
data_long$SexualityCheck<-0
data_long$SexualityCheck[0:(nrow(data_long)/2)]<-data_long$Sexuality_Check_1[0:(nrow(data_long)/2)]
data_long$SexualityCheck[((nrow(data_long)/2+1):nrow(data_long))]<-data_long$Sexuality_Check_1.1[((nrow(data_long)/2+1):nrow(data_long))]
#code as passing manipulation checks if response equals condition
data_long$SexualityCheckPassed<-0
data_long$SexualityCheckPassed[as.numeric(data_long$SexualityCheck)==as.numeric(data_long$Sexuality)]<-1
#code whether manipulation checks passed, in homophobic condition (1) it should be less accepting(>=5)
#and for other condition (0) it should be equal/more accpeitng (equal or less than 4).
#First record the equal likert response to 4 after saving as character, then transform to numeric
data_long$Manip_1_Check<-as.character(data_long$Manip_1_Check)
data_long$MAnip_2_check<-as.character(data_long$MAnip_2_check)
data_long$Manip_1_Check[grepl('Equally',data_long$Manip_1_Check)] <- "4"
data_long$MAnip_2_check[grepl('Equally',data_long$MAnip_2_check)] <- "4"
#ensure it is numeric
data_long$Manip_1_Check<-as.numeric(data_long$Manip_1_Check)
data_long$MAnip_2_check<-as.numeric(data_long$MAnip_2_check)
#Currently Manip_1_Check and Manip_2_Check variables are based upon presented order, so based upon our transformation of the dataframe to long form we know that the first half of the data will correspond to the first check and second half to second check. So we may create a passing country manipulation variable based upon this.
data_long$ManipulationCheck<-0
data_long$ManipulationCheck[0:(nrow(data_long)/2)]<-data_long$Manip_1_Check[0:(nrow(data_long)/2)]
data_long$ManipulationCheck[((nrow(data_long)/2+1):nrow(data_long))]<-data_long$MAnip_2_check[((nrow(data_long)/2+1):nrow(data_long))]
#now code passed checks, initalize to 0
data_long$PassedManipCheck<-0
#now for equally accpeting countries you should answer 4 or above, recall condition value of 0 corresponds to equal
data_long$PassedManipCheck[data_long$ManipulationCheck*(1-data_long$condition)>=4 & data_long$condition==0]<-1
#for less accepting countries the answer should be less than 4
data_long$PassedManipCheck[data_long$ManipulationCheck*(1-data_long$condition)<4 & data_long$condition==1]<-1
##now we can code if  both checks were passed by multiplying together since both ought to be one
data_long$PassedAllChecks<-0
data_long$PassedAllChecks<-data_long$PassedManipCheck*data_long$SexualityCheckPassed
#create new dataframe of those who pased checks to analyze them
data_long_passed<-data_long[data_long$PassedAllChecks==1,]
t.test((data_long$measurement[data_long$Sexuality==1]~data_long$condition[data_long$Sexuality==1]),alternative = "two.sided")
t.test((data_long$measurement[data_long$Sexuality==0]~data_long$condition[data_long$Sexuality==0]),alternative = "two.sided")
df$Race
mean(df$Race=='White')
mean(df$Race=='White')
mean(df$Race=='Asian / Asian American')
View(df)
df$Gender
mean(df$Gender=='Man')
mean(df$Gender=='Woman')
myAOV1<-aov(measurement~Sexuality*condition,data=data_long)
summary(myAOV1)
myAOV2<-aov(measurement~Sexuality*condition,data=data_long_passed)
anova(myAOV2)
# Also get t test results comparing conditions (country homophobia) for each sexuality
t.test((data_long$measurement[data_long$Sexuality==1]~data_long$condition[data_long$Sexuality==1]),alternative = "two.sided")
t.test((data_long$measurement[data_long$Sexuality==0]~data_long$condition[data_long$Sexuality==0]),alternative = "two.sided")
####Load Relevant Libraries and Functions
library(tidyverse)
df<-read.csv('PilotB.csv')
#drop first two rows of irrelevant information
df<-df[-c(1,2),]
#for all responses since the middle option of 4 contains text of 'Equally', replace a response that contains '4' with numeric 4.
#first we must convert factors to characters then search for 'equally' and replace
df$Y11<-as.character(df$Y11)
df$Y12<-as.character(df$Y12)
df$Y13<-as.character(df$Y13)
df$Y21<-as.character(df$Y21)
df$Y22<-as.character(df$Y22)
df$Y23<-as.character(df$Y23)
df$Y11[grepl('Equally',df$Y11)] <- "4"
df$Y12[grepl('Equally',df$Y12)] <- "4"
df$Y13[grepl('Equally',df$Y13)] <- "4"
df$Y21[grepl('Equally',df$Y21)] <- "4"
df$Y22[grepl('Equally',df$Y22)] <- "4"
df$Y23[grepl('Equally',df$Y23)] <- "4"
##convert to numeric
df[c('Y23','Y22','Y21','Y11','Y12','Y13')] <- sapply(df[c('Y23','Y22','Y21','Y11','Y12','Y13')],as.numeric)
#average the three responses for each condtion
df$y1<-(df$Y12+df$Y11+df$Y13)/3
df$y2<-(df$Y22+df$Y21+df$Y23)/3
##split by country homophobia
##keep relevant information for tests, demographics the manipulations, the measurements, and the manipulation checks
dfRelevant<-(df %>%
select(Country1Homophobia, Sexuality,y1,y2, Manip_1_Check, MAnip_2_check,Sexuality_Check_1,Sexuality_Check_1.1, Gender, Race) )
##put into long format
data_long <- gather(dfRelevant, condition,measurement, y1:y2, factor_key=TRUE)
#Now we only kept the first conditions homophobia since then  we know that the second is opposite.
#So recode condition variable that corresponds to condition's value for homophobia.
#right now condition is y1 or y2 for order present, now we want it as 1 for  less accepting, and 0 for equal.
#But first ensure it is as character not facgtor
data_long$condition<-as.character(data_long$condition)
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia=='True']<-1
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia=='False']<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia=='True']<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia=='False']<-1
data_long$condition<-as.numeric(data_long$condition)
#recode 1 as gay and 0 as straight for sexuality, after converting to character
data_long$Sexuality<-as.character(data_long$Sexuality)
data_long$Sexuality[data_long$Sexuality=='Gay']<-1
data_long$Sexuality[data_long$Sexuality=='Straight']<-0
#do the same for the attention checks
data_long$Sexuality_Check_1<-as.character(data_long$Sexuality_Check_1)
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Gay']<-1
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Straight']<-0
data_long$Sexuality_Check_1[data_long$Sexuality_Check_1=='Not Specified']<-2
data_long$Sexuality_Check_1.1<-as.character(data_long$Sexuality_Check_1.1)
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Gay']<-1
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Straight']<-0
data_long$Sexuality_Check_1.1[data_long$Sexuality_Check_1.1=='Not Specified']<-2
data_long$SexualityCheck<-0
data_long$SexualityCheck[0:(nrow(data_long)/2)]<-data_long$Sexuality_Check_1[0:(nrow(data_long)/2)]
data_long$SexualityCheck[((nrow(data_long)/2+1):nrow(data_long))]<-data_long$Sexuality_Check_1.1[((nrow(data_long)/2+1):nrow(data_long))]
#code as passing manipulation checks if response equals condition
data_long$SexualityCheckPassed<-0
data_long$SexualityCheckPassed[as.numeric(data_long$SexualityCheck)==as.numeric(data_long$Sexuality)]<-1
#code whether manipulation checks passed, in homophobic condition (1) it should be less accepting(>=5)
#and for other condition (0) it should be equal/more accpeitng (equal or less than 4).
#First record the equal likert response to 4 after saving as character, then transform to numeric
data_long$Manip_1_Check<-as.character(data_long$Manip_1_Check)
data_long$MAnip_2_check<-as.character(data_long$MAnip_2_check)
data_long$Manip_1_Check[grepl('Equally',data_long$Manip_1_Check)] <- "4"
data_long$MAnip_2_check[grepl('Equally',data_long$MAnip_2_check)] <- "4"
#ensure it is numeric
data_long$Manip_1_Check<-as.numeric(data_long$Manip_1_Check)
data_long$MAnip_2_check<-as.numeric(data_long$MAnip_2_check)
#Currently Manip_1_Check and Manip_2_Check variables are based upon presented order, so based upon our transformation of the dataframe to long form we know that the first half of the data will correspond to the first check and second half to second check. So we may create a passing country manipulation variable based upon this.
data_long$ManipulationCheck<-0
data_long$ManipulationCheck[0:(nrow(data_long)/2)]<-data_long$Manip_1_Check[0:(nrow(data_long)/2)]
data_long$ManipulationCheck[((nrow(data_long)/2+1):nrow(data_long))]<-data_long$MAnip_2_check[((nrow(data_long)/2+1):nrow(data_long))]
#now code passed checks, initalize to 0
data_long$PassedManipCheck<-0
#now for equally accpeting countries you should answer 4 or above, recall condition value of 0 corresponds to equal
data_long$PassedManipCheck[data_long$ManipulationCheck*(1-data_long$condition)>=4 & data_long$condition==0]<-1
#for less accepting countries the answer should be less than 4
data_long$PassedManipCheck[data_long$ManipulationCheck*(1-data_long$condition)<4 & data_long$condition==1]<-1
##now we can code if  both checks were passed by multiplying together since both ought to be one
data_long$PassedAllChecks<-0
data_long$PassedAllChecks<-data_long$PassedManipCheck*data_long$SexualityCheckPassed
#create new dataframe of those who pased checks to analyze them
data_long_passed<-data_long[data_long$PassedAllChecks==1,]
myAOV1<-aov(measurement~Sexuality*condition,data=data_long)
data_long$measurement
data_long$condition
data_long$Sexuality
data_long <- gather(dfRelevant, condition,measurement, y1:y2, factor_key=TRUE)
#Now we only kept the first conditions homophobia since then  we know that the second is opposite.
#So recode condition variable that corresponds to condition's value for homophobia.
#right now condition is y1 or y2 for order present, now we want it as 1 for  less accepting, and 0 for equal.
#But first ensure it is as character not facgtor
data_long$condition<-as.character(data_long$condition)
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia=='True']<-1
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia=='False']<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia=='True']<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia=='False']<-1
data_long$condition
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia=='False']
data_long$Country1Homophobia
library(tidyverse)
df<-read.csv('PilotB.csv')
#drop first two rows of irrelevant information
df<-df[-c(1,2),]
#for all responses since the middle option of 4 contains text of 'Equally', replace a response that contains '4' with numeric 4.
#first we must convert factors to characters then search for 'equally' and replace
df$Y11<-as.character(df$Y11)
df$Y12<-as.character(df$Y12)
df$Y13<-as.character(df$Y13)
df$Y21<-as.character(df$Y21)
df$Y22<-as.character(df$Y22)
df$Y23<-as.character(df$Y23)
df$Y11[grepl('Equally',df$Y11)] <- "4"
df$Y12[grepl('Equally',df$Y12)] <- "4"
df$Y13[grepl('Equally',df$Y13)] <- "4"
df$Y21[grepl('Equally',df$Y21)] <- "4"
df$Y22[grepl('Equally',df$Y22)] <- "4"
df$Y23[grepl('Equally',df$Y23)] <- "4"
##convert to numeric
df[c('Y23','Y22','Y21','Y11','Y12','Y13')] <- sapply(df[c('Y23','Y22','Y21','Y11','Y12','Y13')],as.numeric)
#average the three responses for each condtion
df$y1<-(df$Y12+df$Y11+df$Y13)/3
df$y2<-(df$Y22+df$Y21+df$Y23)/3
##split by country homophobia
##keep relevant information for tests, demographics the manipulations, the measurements, and the manipulation checks
dfRelevant<-(df %>%
select(Country1Homophobia, Sexuality,y1,y2, Manip_1_Check, MAnip_2_check,Sexuality_Check_1,Sexuality_Check_1.1, Gender, Race) )
##put into long format
data_long <- gather(dfRelevant, condition,measurement, y1:y2, factor_key=TRUE)
#Now we only kept the first conditions homophobia since then  we know that the second is opposite.
#So recode condition variable that corresponds to condition's value for homophobia.
#right now condition is y1 or y2 for order present, now we want it as 1 for  less accepting, and 0 for equal.
#But first ensure it is as character not facgtor
data_long$condition<-as.character(data_long$condition)
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia==T]<-1
data_long$condition[data_long$condition=='y1' & data_long$Country1Homophobia==F]<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia==T]<-0
data_long$condition[data_long$condition=='y2' & data_long$Country1Homophobia==F]<-1
data_long$condition<-as.numeric(data_long$condition)
data_long_passed$Sexuality<-as.factor(data_long_passed$Sexuality)
#Now plot
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge") +
xlab('Sexuality') + ylab('Perceived American Identity')
library(ggplot2)
####Load Relevant Libraries and Functions
library(tidyverse)
library(ggplot2)
df<-read.csv('PilotBDataFixedRestricted.csv')
#drop first two rows of irrelevant duplicated information.
```{r include=T,eval=T}
####Load Relevant Libraries and Functions
library(tidyverse)
library(ggplot2)
df<-read.csv('PilotBDataFixedRestricted.csv')
#drop first two rows of irrelevant duplicated information.
df<-df[-c(1,2),]
##Keep relevant information for tests, demographics the manipulations, the measurements, and the manipulation checks
dfRelevant<-(df %>%
select(Country1Homophobia, Sexuality,Condition_1_Results,Condition_2_Results, Manipulation_1_Check, Manipulation_2_Check,Sexuality_Check_1,Sexuality_Check_2, Gender, Race) )
##Transform into long format
data_long <- gather(dfRelevant, condition, Americanness, Condition_1_Results:Condition_2_Results, factor_key=TRUE)
#Now we only kept the first conditions homophobia since then  we know that the second is opposite.
#So create a variable that corresponds to condition's value for homophobia. In this long format, right now the condition variable is coded as "Condition_1_Results" or "Condition_2_Results"
data_long$condition<-as.character(data_long$condition)
#code such that the less accepting or homophobic country of origin condition is one and 0 otherwise
data_long$CountryAcceptance<-0
##The current condition's country is less accepting if we are on the first condition and it is homophobic or the second condition and the first country is not homophobic (since it varies within participant)
data_long$CountryAcceptance[(data_long$condition=='Condition_1_Results' & data_long$Country1Homophobia==T) | (data_long$condition=='Condition_2_Results' & data_long$Country1Homophobia==F)]<-1
##Collapse the Country and Sexuality Checks into one relevant variable to match the condition.
data_long$CountryManipulationCheck<-as.numeric(as.character(data_long$Manipulation_1_Check))
data_long$CountryManipulationCheck[data_long$condition=='Condition_2_Results']<-as.numeric(as.character(data_long$Manipulation_2_Check[data_long$condition=='Condition_2_Results']))
data_long$SexualityCheck<-data_long$Sexuality_Check_1
data_long$SexualityCheck[data_long$condition=='Condition_2_Results']<-data_long$Sexuality_Check_2[data_long$condition=='Condition_2_Results']
##Now keep only our relevant variables: The dependent variable (Americanness), Sexuality, CountryAcceptance, CountryManipulationCheck, SexualityCheck and demographics
data_long<-(data_long %>%
select(Americanness, Sexuality,CountryAcceptance,CountryManipulationCheck, SexualityCheck,Gender, Race) )
#Now create variable if particpant  passed checks for country of origin acceptance condition, initalize to 0
data_long$PassedCountryCheck<-0
#now for equally accpeting countries you should answer 4 or above, recall CountryAcceptance value of 0 corresponds to equally acceptin and one as less
data_long$PassedCountryCheck[as.numeric( as.character( data_long$CountryManipulationCheck)) * (1-data_long$CountryAcceptance) >=4 & data_long$CountryAcceptance == 0] <- 1
#For less accepting countries the answer should be less than 4
data_long$PassedCountryCheck[as.numeric( as.character( data_long$CountryManipulationCheck))  < 4 & data_long$CountryAcceptance == 1] <- 1
##Code the sexuality checks as passing if the response equals the target's sexuality
#Initialize to zero
data_long$SexualityCheckPassed<-0
data_long$SexualityCheckPassed[data_long$Sexuality == data_long$Sexuality]<-1
##now we can code if  both checks were passed by multiplying together since both ought to be one
data_long$PassedAllChecks<-0
data_long$PassedAllChecks<-data_long$PassedCountryCheck*data_long$SexualityCheckPassed
###Some Final House-keeping
##Divide Americanness by 3 in order to get the average as the variable was originally summed
data_long$Americanness<-as.numeric(data_long$Americanness)/3
#create new dataframe of those who pased checks to analyze them
data_long_passed<-data_long[data_long$PassedAllChecks==1,]
```
### Confirmatory analysis
```{r include=T,eval=T}
#now conduct the main analysis of the F test for those who passed manipulation check
AnovaAnalysis<-aov(Americanness~Sexuality*CountryAcceptance,data=data_long_passed)
##Get the summary displaying F stats
summary(AnovaAnalysis)
##Get the Coefficients
AnovaAnalysis$coefficients
##now plot the Results
#First convert Country Acceptance Variable to a factor
data_long_passed$Sexuality<-as.factor(data_long_passed$Sexuality)
#Now plot
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge") +
xlab('Sexuality') + ylab('Perceived American Identity')
```
###Exploratory analyses
Further Analysis will be done to compare the demographic makeup of m-turkers as compared to the original study.
```{r include=T,eval=T}
#Get the proportions of White and Asian / Asian Americans in the data
mean(df$Race=='White')
mean(df$Race=='Asian / Asian American')
#Get the Proportions of male and female identifiers
mean(df$Gender=='Man')
mean(df$Gender=='Woman')
data_long_passed$Sexuality<-as.factor(data_long_passed$Sexuality)
#Now plot
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge") +
xlab('Sexuality') + ylab('Perceived American Identity')
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge")
ggplot(data_long_passed, aes(CountryAcceptance, Americanness, fill = Sexuality)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge")
CountryAcceptance
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance))
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge")
data_long_passed$Sexuality<-as.factor(data_long_passed$Sexuality)
#Now plot
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge") +
xlab('Country Acceptance') + ylab('Perceived American Identity')+
scale_x_discrete(labels=c("0" = "Equal", "1" = "Less"))
##now plot the Results
#First convert Country Acceptance Variable to a factor
data_long_passed$Sexuality<-as.factor(data_long_passed$Sexuality)
data_long_passed$CountryAcceptance<-as.factor(data_long_passed$CountryAcceptance)
#Now plot
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge") +
xlab('Country Acceptance') + ylab('Perceived American Identity')+
scale_x_discrete(labels=c("0" = "Equal", "1" = "Less"))
#Now plot
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge") +
xlab('Country Acceptance') + ylab('Perceived American Identity')+
scale_fill_discrete(name = "Country of Origin \n Acceptance", labels = c("Equally", "Less"))
#Now plot
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge") +
xlab('Target Sexuality') + ylab('Perceived American Identity')+
scale_fill_discrete(name = "Country of Origin \n Acceptance", labels = c("Equally", "Less"))
#Now plot
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge") +
xlab('Target Sexuality') + ylab('Perceived American Identity (1-7 Scale)')+
scale_fill_discrete(name = "Country of Origin \n Acceptance", labels = c("Equally", "Less"))
ow plot
ggplot(data_long_passed, aes(Sexuality, Americanness, fill = CountryAcceptance)) +
stat_summary(geom = "bar", fun.y = mean, position = "dodge") +
stat_summary(geom = "errorbar", fun.data = mean_se, position = "dodge") +
xlab('Target Sexuality') + ylab('Perceived American Identity (1-7 Scale)')+
scale_fill_discrete(name = "Accepting vs U.S.", labels = c("Equally", "Less"))
